KNAPSACK 01 
    1) basic knapsack01 with wt and val array (bottom up)
    https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1

    1.1) subset sum equal to k
    https://practice.geeksforgeeks.org/problems/subset-sum-problem-1611555638/

    1.2) Partition Equal Subset Sum 
    https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1

    1.3) count subset sum equal to k 
    https://practice.geeksforgeeks.org/problems/perfect-sum-problem5633/1
    
    1.4) diff min sub partition (hard ques) (nice logic)
    https://practice.geeksforgeeks.org/problems/minimum-sum-partition3317

    1.5) count two subsetsum diff eq to k (similar to 1.4)
    https://leetcode.com/problems/target-sum

    1.6) target sum (same ques as 1.5, but ques is formatted) (2 methods in soln)
    https://leetcode.com/problems/target-sum

UNBOUNDED KNAPSACK
    2) basic unbounded knapsack01 with wt and val array (bottom up) (top down)

    2.1) Rod cutting
    https://practice.geeksforgeeks.org/problems/rod-cutting0840/

    2.2) coin change number of ways eq to target
    https://practice.geeksforgeeks.org/problems/coin-change2448

    2.3) coin change min coins req to reach target
    https://leetcode.com/problems/coin-change/

LONGEST COMMON SUBSEQUENCE
    3) longest common subsequence, return the length of the lcs (no printing) (all 3 approach)
    https://leetcode.com/problems/longest-common-subsequence/description/
