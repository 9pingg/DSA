01 implementation of gen tree (child nodes taken as list)

02 implementation of bst tree

03 dfs traversal of binary tree (3 ways)

04 insert in BST
https://leetcode.com/problems/insert-into-a-binary-search-tree/

05 delete node in BST
https://leetcode.com/problems/delete-node-in-a-bst/

06 search in BST
https://leetcode.com/problems/search-in-a-binary-search-tree/

07 kth largest element in a stream (min heap keep size of heap eq to k) (bst)
https://leetcode.com/problems/kth-largest-element-in-a-stream/

08 median of a stream (multiset) (bst) (2queues)
https://leetcode.com/problems/find-median-from-data-stream/description/

09 max depth or height of a tree is same
https://leetcode.com/problems/maximum-depth-of-binary-tree

10 check if tree balance (abs(l-r) <= 1 for balanced tree) (requires depth of left subtree and right subtree to get ans)
https://leetcode.com/problems/balanced-binary-tree/description/

11 diameter of tree (n ary tree also)
(check every node find maximum value such that depth of l tree  + depth r tree = maximum)
https://leetcode.com/problems/diameter-of-binary-tree/description/

12 find two bt have indentical values (another type of dfs depth question) (many conditions to check)

13 bfs zigzag (same question as bfs traversal using queue but here we use deque) 2 ways

14 flatten a binary tree to linked list (HARD QUES) (some similairty to lca)
https://leetcode.com/problems/flatten-binary-tree-to-linked-list/description/

15) left view of tree (2 aprroach) (rec) (level order based) (first node of level)
https://practice.geeksforgeeks.org/problems/left-view-of-binary-tree

16) right view of tree (2 aprroach) (queue aproach) (last node of level)
https://leetcode.com/problems/binary-tree-right-side-view/description/

17) max width of a tree

18) boundary traversal of tree (3 parts) (hard ques)
https://www.codingninjas.com/studio/problems/boundary-traversal_790725?leftPanelTab=1

19) children sum property (p == p.left + p.right) (easy)
https://www.codingninjas.com/studio/problems/children-sum-property_8357239

vertical (no sort), top view and bottom view are almost the same code.

20) vertical order traversal of tree (hard specially on leetcode where sort values if row and col is same) (BFS)
https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/description/

21) top view of tree (map)
https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1

22) bottom view of tree 
https://practice.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1

23) symmetric tree (check if two trees are mirror)
https://leetcode.com/problems/symmetric-tree

24) print all paths from root to leaf

25) binary tree infect
https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected/

26) nodes at k distance from target (make child to parent connection same as before) (dic for c to p mapping) (dic for visited nodes)
https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/

27) preorder and inorder to make binary tree
https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/

28) postorder and inorder to make bt
https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/

29) max path sum (diameter of the bt or max height of bt)
https://leetcode.com/problems/binary-tree-maximum-path-sum/
