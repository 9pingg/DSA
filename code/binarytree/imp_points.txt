1) whenerver update is to be made in tree always make updates root.left = temp, not like this root = temp 

2) bst search, del, ins is o(h) h = height of the tree

3) set is binary search tree and multiset is self balancing bst

4) inorder traversal of bst = get values in sorted order

5) all traversals are o(n) and s: o(h)

6) travesal: vertical, bottom, and top are based on lines (divide nodes by columns) (modified queue entry) 

7) when nodes are to be appended in a list, such that bottom nodes appear earlier in list. use recursion go root.left 
   till none, then add nodes on way back to the root

8) MAX WIDTH QUE have queue_node (modified queue entry)
9) constructing a unique bt from traversals given?

   pre and post order given no unique bt can be constructed
   inorder is needed for it to be unique.
   so pre and inorder, post and inorder can be used to construct unique bts.